import random
import statistics
import time

randoms = []
for i in range(0, 30):
	n = random.randint(1, 100)
	randoms.append(n)

ranmean = int(statistics.mean(randoms))
ranmedi = int(statistics.median(randoms))
ranmode = statistics.mode(randoms)
ransort = randoms[:]
ransort.sort()
lwrqart = int((len(ransort) / 3) - 1)
uprqart = int((len(ransort) - lwrqart) - 1)
number = int(input(f"Pick a number between {min(randoms)} and"
                   f" {max(randoms)}."))
position = int(input(f"Pick a number between 1 and {len(randoms)}."))
perceivedposition = position - 1

# print(randoms)
# print(ransort)
# print(ranmean, ranmedi, ranmode)
# print(lwrqart)
# print(uprqart)
# print(ransort[lwrqart])
# print(ransort[uprqart])


print("1")
print(f"I predict your number, {number}, will not be in the list generated by the "
      f"computer.")
if number not in randoms:
	print(f"I was right, {number} is not in the list generated by the computer.")
else:
	print(f"Wow! {number} appears in the list.")
print()
print("2")
print("I predict the computer will not generate a list with a symmetric distribution.")
if ranmean != ranmedi:
	print("The computer has generated a list lacking symmetric distribution.")
else:
	print(f"Since both the mean and median are {ranmean}, it is possible the computer "
	      f"has generated a list with symmetric distribution.")
print()
print("3")
print(f"I predict your number, {number}, is lower than the number at position "
      f"{position}.")
if number < randoms[perceivedposition]:
	print(f"I was right, {number} is lower than {randoms[perceivedposition]}")
else:
	print(f"Nope, {number} is greater than (or equal to) {randoms[perceivedposition]}.")
print()
print("4")
print(f"I predict {number} will be lower than the mode of the generated set.")
if number < ranmode:
	print(f"{number} is lower than {ranmedi}.")
else:
	print(f"Darn, wrong again. {number} is greater than {ranmedi}.")
print()
print("5")
print(f"I predict {number} will be greater than the number stored at position "
      f"{position}.")
if number > randoms[perceivedposition]:
	print(f"I was correct, {number} is greater than {randoms[perceivedposition]}.")
else:
	print(f"OOPS, {number} is less than, or equal to {randoms[perceivedposition]}.")

print()

print("6")
print(f"I predict your number is in the middle 50% of values in the list")
if ransort[lwrqart] <= number >= ransort[uprqart]:
	print(f"Your number, {number}, is in the middle 50% of all values in the list ")
else:
	print(f"I was wrong, {number} is not in the middle 50% of all values.")
print()
print("7")
print(f"I predict your number is not in the middle 50% of values in the list")
if ransort[lwrqart] >= number <= ransort[uprqart]:
	print(f"Your number, {number}, is not in the middle 50% of all values in the list ")
else:
	print(f"I was wrong, {number} is in the middle 50% of all values.")

print()
print("8")

print(f"How much wood would a wood chuck chuck if a wood chuck could..")
for g in ransort:
	wood = 0
	Norris = 0
	if ransort[i] > randoms[i]:
		wood += 1
	else:
		Norris = + 1
time.sleep(5)
if Norris > wood:
	print(f"chuck wood")
else:
	print("Chuck Norris")
print()
print("9")
print(f"I predict your number is not in the second quartile")
if ransort[lwrqart] <= number <= ranmedi:
	print(f"{number} does happen to be in the second quartile.")
else:
	print(f"Yep, your number is not in the second quartile.")
print()
print("10")
print(f"I predict your number is not in the third quartile")
if ransort[uprqart] >= number >= ranmedi:
	print(f"{number} does happen to be in the third quartile.")
else:
	print(f"Yep, your number is not in the third quartile.")
